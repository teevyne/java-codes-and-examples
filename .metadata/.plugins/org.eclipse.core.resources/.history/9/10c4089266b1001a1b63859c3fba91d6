package employeeSolution;

import static org.junit.jupiter.api.Assertions.*;

import org.junit.jupiter.api.BeforeEach;
import org.junit.jupiter.api.Test;

class EmployeeTest {
	
	Payable john;
	Payable steve;
	Payable james;
	Payable efe;
	
	Payable faceShield;

	@BeforeEach
	void setUp() throws Exception {
		john = new SalariedEmployee("John", "Johnson", "001122");
		steve = new HourlyEmployee("Steve", "Stephenson", "001123");
		james = new CommissionEmployee("James", "Jameson", "001124");
		efe = new BasePlusCommissionEmployee("Efe", "Efeson", "001125");
		
		faceShield = new Invoice("1", "Face Shield", 35, 1200);
	}
	
	@Test
	void invoicePayment() {
		double paymentAmount = faceShield.getPaymentAmount();
		assertEquals(42000, paymentAmount);
	}
	
	@Test
	void invoicePatmentWithNegativeQuantity() {
		Invoice faceShield = new Invoice("1", "Face protection", -35, 1200);
		double paymentAmount = faceShield.getPaymentAmount();
		assertEquals(0, paymentAmount);
	}
	
	@Test
	void invoicePaymentWithNegativePrice() {
		Invoice faceShield = new Invoice("1", "Face protection", 35, -1200);
		double paymentAmount = faceShield.getPaymentAmount();
		assertEquals(0, paymentAmount);
	}
	
	// Always note your container life
//	@Test
//	void invoicePaymentWithLargeQuantityValue() {
//		Invoice faceShield = new Invoice("1", "Face protection", 350000000, 12);
//		double paymentAmount = faceShield.getPaymentAmount();
//		assertEquals(0, paymentAmount);
//	}
	
	@Test
	void getHourlyEmployeePayment() {
		
	}
}
